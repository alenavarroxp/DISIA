apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:latest
          ports:
            - containerPort: 3000
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
            - name: grafana-provisioning
              mountPath: /etc/grafana/provisioning/datasources/datasources.yaml
              subPath: datasources.yaml
            - name: grafana-provisioning
              mountPath: /etc/grafana/provisioning/dashboards/dashboards.yaml
              subPath: dashboards.yaml
            - name: grafana-provisioning
              mountPath: /etc/grafana/provisioning/dashboards/mqtt-dashboard.json
              subPath: mqtt-dashboard.json
      volumes:
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: grafana-pvc
        - name: grafana-provisioning
          configMap:
            name: grafana-provisioning
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-provisioning
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
      - name: InfluxDB
        type: influxdb
        access: proxy
        url: http://influxdb-service:8086
        jsonData:
          version: Flux
          httpMode: POST
          organization: my-org
          defaultBucket: my-bucket
          tlsSkipVerify: true
        secureJsonData:
          token: admin-token
          
  dashboards.yaml: |
    apiVersion: 1
    providers:
    - name: 'MQTT Dashboard'
      orgId: 1
      folder: ''
      type: file
      disableDeletion: true
      editable: true
      options:
        path: /etc/grafana/provisioning/dashboards

  mqtt-dashboard.json: |
    {
      "title": "MQTT Monitor",
      "panels": [
        {
          "title": "Mensajes por Tópico",
          "type": "stat",
          "datasource": "InfluxDB",
          "targets": [{
            "query": "from(bucket: \"my-bucket\") |> range(start: -15m) |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\") |> group(columns: [\"topic\"]) |> count()",
            "rawQuery": true
          }]
        },
        {
          "title": "Últimos Valores",
          "type": "table",
          "datasource": "InfluxDB",
          "targets": [{
            "query": "from(bucket: \"my-bucket\") |> range(start: -15m) |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\") |> last()",
            "rawQuery": true
          }]
        }
      ]
    }
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
spec:
  type: LoadBalancer
  selector:
    app: grafana
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
