apiVersion: apps/v1
kind: Deployment
metadata:
  name: mqtt-web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mqtt-web
  template:
    metadata:
      labels:
        app: mqtt-web
    spec:
      containers:
      - name: web
        image: python:3.9-alpine
        ports:
        - containerPort: 5000
        command: ["sh", "-c"]
        args:
          - |
            pip install flask paho-mqtt && 
            echo '
            from flask import Flask, request
            import paho.mqtt.publish as publish
            import json

            app = Flask(__name__)

            @app.route("/")
            def home():
                return """
                <h2>Enviar mensaje MQTT</h2>
                <form action="/send" method="post">
                    Tópico: <input type="text" name="topic" placeholder="ej: sensores/estado"><br><br>
                    Mensaje: <input type="text" name="message" placeholder="Mensaje principal"><br><br>
                    Uso CPU (%): <input type="number" name="cpu" step="0.1"><br><br>
                    Uso Memoria (%): <input type="number" name="mem" step="0.1"><br><br>
                    <input type="submit" value="Enviar">
                </form>
                """

            @app.route("/send", methods=["POST"])
            def send():
                data = {
                    "mensaje": request.form["message"],
                    "cpu": float(request.form["cpu"]),
                    "memoria": float(request.form["mem"])
                }
                topic = request.form["topic"]
                publish.single(
                    topic,
                    json.dumps(data),
                    hostname="mosquitto-service"
                )
                return f"Mensaje enviado al tópico '{topic}': {data}"
            
            app.run(host="0.0.0.0", port=5000)
            ' > app.py && python app.py
---
apiVersion: v1
kind: Service
metadata:
  name: mqtt-web-service
spec:
  type: LoadBalancer
  selector:
    app: mqtt-web
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 5000
